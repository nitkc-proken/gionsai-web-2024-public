name: Deploy Production
on:
  workflow_dispatch:
  push:
    branches:
      - main
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      - name: Prisma Generate
        run: pnpm prisma generate
      - name: Build
        run: pnpm run build
      - name: Upload Remix
        uses: actions/upload-artifact@v4
        with:
          name: remix
          path: apps/remix/build/
      - name: Upload hono API
        uses: actions/upload-artifact@v4
        with:
          name: hono-api
          path: apps/api/dist/


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Remix
        uses: actions/download-artifact@v4
        with:
          name: remix
          path: frontend
      - name: Download hono API
        uses: actions/download-artifact@v4
        with:
          name: hono-api
          path: backend
      - name: Display structure of downloaded files
        run: ls -R
      - name: rsync deployments
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete
          path: backend/
          remote_path: ${{ secrets.REPO_PATH }}apps/api/dist/
          remote_host: ${{ secrets.HOST_NAME }}
          remote_port: ${{ secrets.SSH_PORT }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}
      - name: rsync deployments
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete
          path: frontend/
          remote_path: ${{ secrets.REPO_PATH }}apps/remix/build/
          remote_host: ${{ secrets.HOST_NAME }}
          remote_port: ${{ secrets.SSH_PORT }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}
      - name: Install SSH Key for Deploy
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_KEY }}
          host: ${{ secrets.HOST_NAME }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.REPO_PATH }}
            git pull
            pnpm install --frozen-lockfile
            pnpm prisma migrate deploy
            pnpm prisma generate
            pnpm run datasource sync
            pnpm pm2 reload ecosystem.config.js
